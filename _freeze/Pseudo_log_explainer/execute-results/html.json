{
  "hash": "355c8e83a0cc996adb561fcb00c01839",
  "result": {
    "markdown": "---\ntitle: \"Pseudo-log transformations\"\nauthor: \"GH\"\ndate: \"2022-08-08\"\noutput: html_document\n---\n\n\n\n\n## Introduction\n\nThis side document illustrates how pseudo-log transformations can be used to transform skewed distributions towards normality. \n\nThe transformation $f(x) = sinh^-1(x/2\\sigma)/log(10)$ is a pseudo-logarithmic transformation mentioned by Johnson (1949). It has the following advantages over ordinary logarithmic transformations:\n\n* it is defined also for $x=$ as $f(0) = 0$\n* it is a signed logarithmic transformation, and is defined also for negative values as $f(-|x|)=-f(|x|)$\n\nOf course, this comes at the cost of deviation from the logarithmic transformatio in terms of interpretability.\n\nThe parameter $\\sigma$ may be used to adapt the transformation to a specific range of an empirical distribution.\n\nWe define the pseudo-logarithmic transformation in R as:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npseudo_log <- function(x, sigma=1, base=10)  asinh(x/(2 * sigma))/log(base)\ninv_pseudo_log <- function(x, sigma=1, base=10) 2 * sigma * sinh(x * log(base))\n```\n:::\n\n\n## Impact of choice of $\\sigma$\n\nNext, we investigate how the parameter $\\sigma$ impacts the result of the transformation. We assume that $x$ follows a log-normal distribution, and we will show results of $f(x)$ with different choices of $\\sigma$. We center and scale $f(x)$ before plotting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- seq(0.001, 0.999, 0.001)\nx <- exp(qnorm(p, mean=0, sd=1))\n\nhist(x)\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\ny <- cbind(log(x), scale(pseudo_log(x, 1)), scale(pseudo_log(x,0.5)), scale(pseudo_log(x, 2)), scale(pseudo_log(x, 0.05)))\n\n\nplot(x, y[,2], type=\"l\", ylab=\"f(x)\", ylim=range(y))\nlines(x, y[,1], col=\"red\")\nlines(x, y[,3], type=\"l\", lty=2)\nlines(x, y[,4], type=\"l\", lty=3)\nlines(x, y[,5], type=\"l\", lty=4)\nlegend(\"topleft\", lty=c(1,1,2,3,4), col=c(\"red\",\"black\",\"black\",\"black\",\"black\"), legend=c(\"log\", \"sigma=1\", \"sigma=0.5\", \"sigma=2\", \"sigma=0.05\"))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\nIn the next code chunk, we multiply by 10 and repeat the exercise. We learn that the transformations become more similar and the choice of $\\sigma$ less relevant.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- x*10\n\ny <- cbind(scale(log(x)), scale(pseudo_log(x, 1)), scale(pseudo_log(x,0.5)), scale(pseudo_log(x, 2)), scale(pseudo_log(x, 0.05)))\n\n\nplot(x, y[,2], type=\"l\", ylab=\"f(x)\")\nlines(x, y[,1], col=\"red\")\nlines(x, y[,3], type=\"l\", lty=2)\nlines(x, y[,4], type=\"l\", lty=3)\nlines(x, y[,5], type=\"l\", lty=4)\nlegend(\"bottomright\", lty=c(1,1,2,3,4), col=c(\"red\",\"black\",\"black\",\"black\",\"black\"), legend=c(\"log\", \"sigma=1\", \"sigma=0.5\", \"sigma=2\", \"sigma=0.05\"))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nFinally, we apply the pseudo-logarithmic transformation to the original normal deviates. We learn that a higher value for the parameter $\\sigma$ makes the distribution 'slimmer' while a lower value makes it 'fatter', and it is even possible to induce bimodality with low values of sigma:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz <- qnorm(p, mean=0, sd=1)\nhist(z)\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(z, sigma=1))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(z, sigma=2))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(z, sigma=0.5))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(z, sigma=0.05))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-8-5.png){width=672}\n:::\n:::\n\n\n## Finding a parameter that best achieves normality\n\nAny test statistic for testing normality could be chosen to find a suitable value of $\\sigma$ that induces normality into the transformed values. Here we use the (Pearson) correlation coefficient to compare the empirical distribution with normal deviates.\n\n### Deviates from log normal distribution\n\nWe simulate from a shifted log normal distribution and evaluate the value of $\\sigma$ that optimizes agreement with a normal distribution:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx<-sort(exp(rnorm(1000)+3))\n\nhist(x)\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsigmas <- 2**seq(-10, 10, 1)\norigcor <- cor(qnorm((1:length(x)-0.5)/length(x)), x)\n\nncorx <- sapply(sigmas, function(X) cor(qnorm((1:length(x)-0.5)/length(x)), pseudo_log(x,X)))\n\ncat(\"Optimal sigma: \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimal sigma: \n```\n:::\n\n```{.r .cell-code}\n(optsigma<-sigmas[ncorx==max(ncorx)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0009765625\n```\n:::\n\n```{.r .cell-code}\nplot(log2(sigmas), ncorx, ylab=\"Correlation with normal deviates\", ylim=c(0,1))\npoints(log2(sigmas)[ncorx==max(ncorx)], max(ncorx), pch=19)\nabline(h=origcor)\nlegend(\"bottomright\", lty=c(1, NA,NA), pch=c(NA,1,19), legend=c(\"Original\", \"Pseudo-log\", \"Pseudo-log with optimal sigma\"))\nbox()\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(x, optsigma))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n\n### Deviates from exponential distribution\n\nAlso with an exponential distribution, the pseudo-logarithm may achieve a better agreement with a normal:\n\n::: {.cell}\n\n```{.r .cell-code}\nx<-sort(exp(rnorm(1000)+3))\n\nhist(x)\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsigmas <- 2**seq(-10, 10, 1)\norigcor <- cor(qnorm((1:length(x)-0.5)/length(x)), x)\n\nncorx <- sapply(sigmas, function(X) cor(qnorm((1:length(x)-0.5)/length(x)), pseudo_log(x,X)))\n\ncat(\"Optimal sigma: \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimal sigma: \n```\n:::\n\n```{.r .cell-code}\n(optsigma<-sigmas[ncorx==max(ncorx)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0009765625\n```\n:::\n\n```{.r .cell-code}\nplot(log2(sigmas), ncorx, ylab=\"Correlation with normal deviates\", ylim=c(0,1))\npoints(log2(sigmas)[ncorx==max(ncorx)], max(ncorx), pch=19)\nabline(h=origcor)\nlegend(\"bottomright\", lty=c(1, NA,NA), pch=c(NA,1,19), legend=c(\"Original\", \"Pseudo-log\", \"Pseudo-log with optimal sigma\"))\nbox()\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(x, optsigma))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-12-3.png){width=672}\n:::\n:::\n\n\n### Deviates from mixture distribution\n\nNow we mix a normal, lognormal and exponential distribution:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx1 <- scale(rnorm(1000))\nx2 <- scale(rexp(1000))\nx3 <- scale(exp(rnorm(1000)))\n\np1 <- rbinom(1000, 1, 0.33)\np2 <- rbinom(1000, 1, 0.5)\n\nx<-p1*x1 + (1-p1)*(p2*x2+(1-p2)*x3)\nx <- x-min(x)\nx<-sort(x)\n\nhist(x)\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsigmas <- 2**seq(-10, 10, 1)\norigcor <- cor(qnorm((1:length(x)-0.5)/length(x)), x)\n\nncorx <- sapply(sigmas, function(X) cor(qnorm((1:length(x)-0.5)/length(x)), pseudo_log(x,X)))\n\ncat(\"Optimal sigma: \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimal sigma: \n```\n:::\n\n```{.r .cell-code}\n(optsigma<-sigmas[ncorx==max(ncorx)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5\n```\n:::\n\n```{.r .cell-code}\nplot(log2(sigmas), ncorx, ylab=\"Correlation with normal deviates\", ylim=c(0,1))\npoints(log2(sigmas)[ncorx==max(ncorx)], max(ncorx), pch=19)\nabline(h=origcor)\nlegend(\"bottomright\", lty=c(1, NA,NA), pch=c(NA,1,19), legend=c(\"Original\", \"Pseudo-log\", \"Pseudo-log with optimal sigma\"))\nbox()\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(x, optsigma))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-14-3.png){width=672}\n:::\n:::\n\n\n\n### Normal deviates\n\nWith simulated normal deviates, the pseudo-logarithm cannot improve the already perfect normality.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx<-sort(rnorm(1000))\n\nhist(x)\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsigmas <- 2**seq(-10, 10, 1)\norigcor <- cor(qnorm((1:length(x)-0.5)/length(x)), x)\n\nncorx <- sapply(sigmas, function(X) cor(qnorm((1:length(x)-0.5)/length(x)), pseudo_log(x,X)))\n\ncat(\"Optimal sigma: \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOptimal sigma: \n```\n:::\n\n```{.r .cell-code}\n(optsigma<-sigmas[ncorx==max(ncorx)])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n\n```{.r .cell-code}\nplot(log2(sigmas), ncorx, ylab=\"Correlation with normal deviates\", ylim=c(0,1))\npoints(log2(sigmas)[ncorx==max(ncorx)], max(ncorx), pch=19)\nlegend(\"bottomright\", lty=c(1, NA,NA), pch=c(NA,1,19), legend=c(\"Original\", \"Pseudo-log\", \"Pseudo-log with optimal sigma\"))\nabline(h=origcor)\nbox()\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(pseudo_log(x, optsigma))\n```\n\n::: {.cell-output-display}\n![](Pseudo_log_explainer_files/figure-html/unnamed-chunk-16-3.png){width=672}\n:::\n:::\n\n\n## References\n\nJohnson NL (1949). Systems of Frequency curves Generated by Methods of Translation. Biometrika 36, 149-176.",
    "supporting": [
      "Pseudo_log_explainer_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}