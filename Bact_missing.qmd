# Results of IDA: Missing values {#Missing}




```{r, echo=FALSE, warning=FALSE, message=FALSE, echo=FALSE}
## Load libraries
library(here)
library(tidyverse)
library(Hmisc)
library(naniar) ## for missing data 
library(gt)
library(kableExtra)
library(DT)
load(here::here("data", "bact_env_b.rda"))

```


### M1: Prevalence of missing values

Number and percentage of missingness for each predictor, sorted by descending missingness proportion. 

```{r, message =FALSE, warning =FALSE , echo=FALSE}
b_bact %>%
  select(-ID, -BC) %>%
  miss_var_summary() %>%
  gt::gt() %>%
    gt::cols_label(
    variable = md("**Variable**"),
    n_miss = md("**Missing (count)**"),
    pct_miss = md("**Missing (%)**")
  ) %>%
  gt::fmt_number(
    columns = vars(pct_miss),
    decimals = 2
  )

```


### M2: Complete cases

Number of available complete cases (outcome and predictors):

```{r, message =FALSE, warning =FALSE , echo=FALSE}
## COMMENT: is there a way to remove the underliners (e.g. in Key_predictors_only)

b_bact %>%
  select() %>%
  mutate(Outcome = ifelse(1-any_miss(b_bact[,c("BC")]),NA,1)) %>%
  mutate(Outcome_and_structural_variables = ifelse(apply(b_bact[,c("BC",structural_vars)],1,function(X) 1-any_miss(X)),NA,1)) %>%
  mutate(Outcome_and_key_predictors_only = ifelse(apply(b_bact[,c("BC",key_predictors)],1,function(X) 1-any_miss(X)),NA,1)) %>%
  mutate(Outcome_key_predictors_and_predictors_of_medium_importance = ifelse(apply(b_bact[,c("BC",key_predictors,medimp_predictors)],1,function(X) 1-any_miss(X)),NA,1)) %>%   
  mutate(Outcome_and_all_predictors = ifelse(apply(b_bact,1,function(X) 1-any_miss(X)),NA,1)) %>%
  miss_var_summary(order=FALSE) %>%
  gt::gt() %>%
    gt::cols_label(
    variable = md("**Set**"),
    n_miss = md("**Complete (count)**"),
    pct_miss = md("**Complete (%)**")
  ) %>%
  gt::fmt_number(
    columns = vars(pct_miss),
    decimals = 2
  )

```


### ME1: Patterns of missing values

#### Complete cases by strata defined by structural variables

```{r, message =FALSE, warning =FALSE , echo=FALSE}

## COMMENT @Mark: can you please make the table nicer? I can't get a proper structure with GENDER and AGEGROUP.

b_bact %>%
  select(GENDER, AGEGROUP) %>%
  mutate(All_predictors = ifelse(apply(b_bact,1,function(X) 1-any_miss(X)),NA,1)) %>%
  mutate(Structural_variables = ifelse(apply(b_bact[,structural_vars],1,function(X) 1-any_miss(X)),NA,1)) %>%
  mutate(Key_predictors = ifelse(apply(b_bact[,c(key_predictors)],1,function(X) 1-any_miss(X)),NA,1)) %>%
  mutate(Key_and_medium_importance_predictors = ifelse(apply(b_bact[,c(key_predictors,medimp_predictors)],1,function(X) 1-any_miss(X)),NA,1)) %>%
  group_by(GENDER, AGEGROUP) %>%
  miss_var_summary(order=FALSE) %>%
  gt::gt() %>%
    gt::cols_label(
#    GENDER = md("**Sex**"),
#    AGEGROUP = md("**Age group**"),
    variable = md("**Set**"),
    n_miss = md("**Complete (count)**"),
    pct_miss = md("**Complete (%)**")
  ) %>%
  gt::fmt_number(
    columns = vars(pct_miss),
    decimals = 2
  )

```


#### Dendrogram of missingness indicators 

The dendrogram depicts the results of a cluster analysis using the complete linkage method based on the percentage of discordant missing indicators. (This percentage was computed via the squared Euclidian distance of missingness indicators between predictors.) The vertical axis shows the distance between two clusters, which is given by the maximum distance between any element of the first and the second clusters.  For example, if two clusters are merged at a height of 25 it means that in 25% of the observations the missingness indicators of the most discordant predictors contained in the two clusters are discordant.

The numbers in brackets are the percentages of missing observations for each predictor.

```{r, message =FALSE, warning =FALSE , echo=FALSE}

## COMMENT @Mark: can we remove the text under the x-axis? I tried various (xlab, sub) but all failed.
is_bact <- is.na(b_bact)*1
exl_vars <- which(colnames(is_bact) %in% c("BC","BloodCulture","ID","AGEGROUP","SEX"))
perc_miss <- round(apply(is_bact, 2, mean)*100,0)
colnames(is_bact)<-paste(colnames(is_bact),"(",perc_miss,")",sep="")
hobj <- hclust(dist(t(is_bact[,-exl_vars]))^2 / nrow(b_bact) * 100)
plot(hobj, cex=0.5, ylab="Percent discordantly missing", hang=0.01)
```




## Section session info

```{r, message =FALSE, warning =FALSE , echo=FALSE}
sessionInfo()
```
